<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.franxx.blog.mapper.DeveloperInfoMapper" >
  <resultMap id="BaseResultMap" type="top.franxx.blog.pojo.DeveloperInfo" >
    <result column="dev_nickname" property="devNickname" jdbcType="VARCHAR" />
    <result column="dev_intro" property="devIntro" jdbcType="VARCHAR" />
    <result column="dev_location" property="devLocation" jdbcType="VARCHAR" />
    <result column="dev_qq" property="devQq" jdbcType="VARCHAR" />
    <result column="dev_email" property="devEmail" jdbcType="VARCHAR" />
    <result column="dev_weibo" property="devWeibo" jdbcType="VARCHAR" />
    <result column="dev_git" property="devGit" jdbcType="VARCHAR" />
    <result column="dev_img" property="devImg" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    dev_nickname, dev_intro, dev_location, dev_qq, dev_email, dev_weibo, dev_git, dev_img
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="top.franxx.blog.pojo.DeveloperInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from developer_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="top.franxx.blog.pojo.DeveloperInfoExample" >
    delete from developer_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.franxx.blog.pojo.DeveloperInfo" >
    insert into developer_info (dev_nickname, dev_intro, dev_location, 
      dev_qq, dev_email, dev_weibo, 
      dev_git, dev_img)
    values (#{devNickname,jdbcType=VARCHAR}, #{devIntro,jdbcType=VARCHAR}, #{devLocation,jdbcType=VARCHAR}, 
      #{devQq,jdbcType=VARCHAR}, #{devEmail,jdbcType=VARCHAR}, #{devWeibo,jdbcType=VARCHAR}, 
      #{devGit,jdbcType=VARCHAR}, #{devImg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="top.franxx.blog.pojo.DeveloperInfo" >
    insert into developer_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="devNickname != null" >
        dev_nickname,
      </if>
      <if test="devIntro != null" >
        dev_intro,
      </if>
      <if test="devLocation != null" >
        dev_location,
      </if>
      <if test="devQq != null" >
        dev_qq,
      </if>
      <if test="devEmail != null" >
        dev_email,
      </if>
      <if test="devWeibo != null" >
        dev_weibo,
      </if>
      <if test="devGit != null" >
        dev_git,
      </if>
      <if test="devImg != null" >
        dev_img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="devNickname != null" >
        #{devNickname,jdbcType=VARCHAR},
      </if>
      <if test="devIntro != null" >
        #{devIntro,jdbcType=VARCHAR},
      </if>
      <if test="devLocation != null" >
        #{devLocation,jdbcType=VARCHAR},
      </if>
      <if test="devQq != null" >
        #{devQq,jdbcType=VARCHAR},
      </if>
      <if test="devEmail != null" >
        #{devEmail,jdbcType=VARCHAR},
      </if>
      <if test="devWeibo != null" >
        #{devWeibo,jdbcType=VARCHAR},
      </if>
      <if test="devGit != null" >
        #{devGit,jdbcType=VARCHAR},
      </if>
      <if test="devImg != null" >
        #{devImg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.franxx.blog.pojo.DeveloperInfoExample" resultType="java.lang.Integer" >
    select count(*) from developer_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update developer_info
    <set >
      <if test="record.devNickname != null" >
        dev_nickname = #{record.devNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.devIntro != null" >
        dev_intro = #{record.devIntro,jdbcType=VARCHAR},
      </if>
      <if test="record.devLocation != null" >
        dev_location = #{record.devLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.devQq != null" >
        dev_qq = #{record.devQq,jdbcType=VARCHAR},
      </if>
      <if test="record.devEmail != null" >
        dev_email = #{record.devEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.devWeibo != null" >
        dev_weibo = #{record.devWeibo,jdbcType=VARCHAR},
      </if>
      <if test="record.devGit != null" >
        dev_git = #{record.devGit,jdbcType=VARCHAR},
      </if>
      <if test="record.devImg != null" >
        dev_img = #{record.devImg,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update developer_info
    set dev_nickname = #{record.devNickname,jdbcType=VARCHAR},
      dev_intro = #{record.devIntro,jdbcType=VARCHAR},
      dev_location = #{record.devLocation,jdbcType=VARCHAR},
      dev_qq = #{record.devQq,jdbcType=VARCHAR},
      dev_email = #{record.devEmail,jdbcType=VARCHAR},
      dev_weibo = #{record.devWeibo,jdbcType=VARCHAR},
      dev_git = #{record.devGit,jdbcType=VARCHAR},
      dev_img = #{record.devImg,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>